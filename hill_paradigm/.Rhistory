# Motion Input
cat(paste("(Motion_OUT)", sep="\t"))
print(action_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_OUT)", sep="\t"))
print(propel_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# OBJECTS AND NO ACTION II
cat(paste("name: ObjectAction", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_objects_3[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(pretrain_objects_4[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(action_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_IN)", sep="\t"))
print(propel_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_objects_3[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1_OUT)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(pretrain_objects_4[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2_OUT)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_OUT)", sep="\t"))
print(action_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_OUT)", sep="\t"))
print(propel_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# AGENT/OBJECT ACTION I
cat(paste("name: AgentObjectAction", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_concordant_2[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(pretrain_objects_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(action_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_IN)", sep="\t"))
print(propel_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_concordant_2[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1_OUT)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(pretrain_objects_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2_OUT)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_OUT)", sep="\t"))
print(action_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_OUT)", sep="\t"))
print(propel_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# AGENT/OBJECT ACTION I
cat(paste("name: AgentObjectAction", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_discordant_2[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(pretrain_objects_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(action_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_IN)", sep="\t"))
print(propel_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_discordant_2[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1_OUT)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(pretrain_objects_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2_OUT)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_OUT)", sep="\t"))
print(action_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_OUT)", sep="\t"))
print(propel_vec[3,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
k = k+1
}
}
sink()
sink('pretraining_interaction.ex')
cat(paste("defT:-", "\n", sep=""))
k = 1
for(i in 1:nrow(pretrain_concordant_1)){
for(j in 1:nrow(pretrain_concordant_2)){
# CONCORDANT AGENTS AND CONCORDANT ACTION
cat(paste("name: ConcordantAgentInteraction", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_concordant_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_IN)", sep="\t"))
print(interaction_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_concordant_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1_OUT)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_OUT)", sep="\t"))
print(interaction_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# DISCORDANT AGENTS AND DISCORDANT ACTION
cat(paste("name: DiscordantAgentInteraction", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_discordant_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_IN)", sep="\t"))
print(interaction_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_discordant_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1_OUT)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_OUT)", sep="\t"))
print(interaction_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# OBJECTS AND NO ACTION I
cat(paste("name: ObjectAction", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_objects_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_IN)", sep="\t"))
print(interaction_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_objects_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1_OUT)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_OUT)", sep="\t"))
print(interaction_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# OBJECTS AND NO ACTION II
cat(paste("name: ObjectAction", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_objects_3[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_IN)", sep="\t"))
print(interaction_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_objects_3[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1_OUT)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_OUT)", sep="\t"))
print(interaction_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# AGENT/OBJECT INTERACTION I
cat(paste("name: AgentObjectInteraction", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_concordant_2[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_IN)", sep="\t"))
print(interaction_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_concordant_2[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1_OUT)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_OUT)", sep="\t"))
print(interaction_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# AGENT/OBJECT INTERACTION II
cat(paste("name: AgentObjectInteraction", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_discordant_2[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_IN)", sep="\t"))
print(interaction_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_discordant_2[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1_OUT)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_OUT)", sep="\t"))
print(interaction_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
k = k+1
}
}
sink()
###################
# habituation set #
###################
sink('habituation.ex')
cat(paste("defT:-", "\n", sep=""))
k = 1
for(i in 1:nrow(helper_stim)){
for(j in 1:nrow(helper_stim)){
# HELPING EVENTS
cat(paste("name: HelpingEvents", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(helper_stim[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(climber_stim[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(action_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_IN)", sep="\t"))
print(propel_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Mountain
cat(paste("(Mountain_IN)", sep="\t"))
print(mountain[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(helper_stim[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1_OUT)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(climber_stim[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2_OUT)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_OUT)", sep="\t"))
print(action_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_OUT)", sep="\t"))
print(propel_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Mountain
cat(paste("(Mountain_OUT)", sep="\t"))
print(mountain[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# HINDERING EVENTS
cat(paste("name: HinderingEvents", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(hinderer_stim[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(climber_stim[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(action_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_IN)", sep="\t"))
print(propel_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Mountain
cat(paste("(Mountain_IN)", sep="\t"))
print(mountain[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(hinderer_stim[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1_OUT)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(climber_stim[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2_OUT)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_OUT)", sep="\t"))
print(action_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_OUT)", sep="\t"))
print(propel_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Mountain
cat(paste("(Mountain_OUT)", sep="\t"))
print(mountain[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
k = k+1
}
}
sink()
sink('habituation_no_eyes_no_sp.ex')
cat(paste("defT:-", "\n", sep=""))
k = 1
for(i in 1:nrow(helper_stim)){
for(j in 1:nrow(helper_stim)){
# HELPING EVENTS
cat(paste("name: HelpingEvents", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(helper_stim[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(climber_stim[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(action_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_IN)", sep="\t"))
print(propel_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Mountain
cat(paste("(Mountain_IN)", sep="\t"))
print(mountain[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(helper_stim[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1_OUT)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(climber_stim[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2_OUT)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_OUT)", sep="\t"))
print(action_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_OUT)", sep="\t"))
print(propel_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Mountain
cat(paste("(Mountain_OUT)", sep="\t"))
print(mountain[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# HINDERING EVENTS
cat(paste("name: HinderingEvents", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(hinderer_stim[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(climber_stim[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(action_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_IN)", sep="\t"))
print(propel_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Mountain
cat(paste("(Mountain_IN)", sep="\t"))
print(mountain[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(hinderer_stim[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_1_OUT)", sep="\t"))
print(eyes_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(climber_stim[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Eyes_2_OUT)", sep="\t"))
print(eyes_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_OUT)", sep="\t"))
print(action_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Propulsion Input
cat(paste("(Propel_OUT)", sep="\t"))
print(propel_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# Mountain
cat(paste("(Mountain_OUT)", sep="\t"))
print(mountain[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
k = k+1
}
}
sink()
############
# test set #
############
sink('test.ex')
cat(paste("defT:-", "\n", sep=""))
k = 1
for(i in 1:nrow(helper_stim)){
for(j in 1:nrow(helper_stim)){
# HELPER ENTITIES
cat(paste("name: Helper", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(helper_stim[i,], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_IN)", sep="\t"))
print(interaction_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(helper_stim[i,], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_OUT)", sep="\t"))
print(interaction_vec[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# HINDERER ENTITIES
cat(paste("name: Hinderer", k, "\n", sep=""))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(hinderer_stim[i,], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_IN)", sep="\t"))
print(interaction_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(hinderer_stim[i,], sep = "\t", quote = FALSE, row.names = FALSE)
# Interaction Input
cat(paste("(Interaction_OUT)", sep="\t"))
print(interaction_vec[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
k = k+1
}
}
sink()
